import { taskValidation } from "../../controllers/tasks";
import { groupModel } from "../../models/groups";
import { taskModel } from "../../models/tasks";
import { userModel } from "../../models/users";
import { ALLOWED_ROLES, ARG_LEN_ERR_MESSAGE, SYNTAX_ERR_MESSAGE } from "../../utils/constants";
import { comDesc } from '../comDesc'
import { command } from "../command";

async function sendTask(ctx): Promise<void> {
  const query = ctx.message.text.split(' ').slice(1)

  if (query.length < 7) {
    ctx.telegram.sendMessage(ctx.message.chat.id, ARG_LEN_ERR_MESSAGE + "send_task")
    return
  }

  const [groupQuery, ...taskQuery] = query
  
  const group = await groupModel.findOne({groupName: groupQuery})
  const user = await userModel.findOne({uid: ctx.from.id, groupName: groupQuery, role: ["moderator", "admin"]})

  if (!group || !user || (user.role !== "moderator" && user.role !== "admin")) {
    ctx.telegram.sendMessage(ctx.message.chat.id, "–ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ª–∏–±–æ –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≤ –Ω–µ–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –∞–¥–º–∏–Ω–æ–º ü§ï")
    return
  }

  if (!taskValidation(taskQuery)) {
    ctx.telegram.sendMessage(ctx.message.chat.id, SYNTAX_ERR_MESSAGE + "send_task")
    return
  }

  const time = new Date(taskQuery.slice(0, 4).join(' '))
  time.setHours(time.getHours() - 3)
  const discipline = taskQuery[4].split('_').join(' ')
  const description = taskQuery.slice(5).join(' ')

  const groupMembers = await userModel.find({groupName: groupQuery, role: ALLOWED_ROLES})
  let i = 0;
  for (let member of groupMembers) {
    const task = await taskModel.create({
      uid: member.uid,
      description: description,
      discipline: discipline,
      time: time.getTime(),
      status: "w8ing4accept"
    })

    ctx.telegram.sendMessage(member.uid, 
      `–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –æ—Ç ${group.groupName}!\ntask_id: ${task._id}\n\n–ü—Ä–µ–¥–º–µ—Ç: ${discipline}\n\n–û–ø–∏—Å–∞–Ω–∏–µ: ${description}\n\n–ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å, –≤–≤–µ–¥–∏—Ç–µ /accept ${task._id}\n–ß—Ç–æ–±—ã –æ—Ç–∫–ª–æ–Ω–∏—Ç—å, –≤–≤–µ–¥–∏—Ç–µ /decline ${task._id}`)
    
    if (i++ >= 30) {
      await new Promise((resolve) => setTimeout(resolve, 1200))
      i = 0
    }
  }
  ctx.telegram.sendMessage(ctx.message.chat.id, `–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–æ—Å–ª–∞–Ω–∞ –≤—Å–µ–º –≤ –≥—Ä—É–ø–ø–µ ${groupQuery}!`)
}
const sendTaskDescription = new comDesc(
  "/send_task [group] [time] [description] [discipline]", 
  "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≥—Ä—É–ø–ø—ã", 
  3, 
  "group_name - –≥—Ä—É–ø–ø–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É",
  "time - –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ \"DD MM YYYY hh:mm\"",
  "description - —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏",
  "discipline - —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ–¥–º–µ—Ç, –ø–æ –ø–æ–≤–æ–¥—É –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ. \n    –í–ê–ñ–ù–û: –ü—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞, –ø—Ä–æ–±–µ–ª—ã –∑–∞–º–µ–Ω—è—é—Ç—Å—è –Ω–∏–∂–Ω–∏–º–∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è–º–∏ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–∞—Ä—Å–∞ —Å—Ç—Ä–æ–∫–∏",
  "–ü—Ä–∏–º–µ—Ä: /add_task –∫–ª–∞–Ω_–∫—Ä—É—Ç—ã–µ_–≥—Ä–µ–º–ª–∏–Ω—ã 01 01 2023 15:45 –î—Ä—É–≥–æ–µ –ø–æ–∫—É—à–∞—Ç—å")

export const SendTask = new command(sendTask, "send_task", sendTaskDescription)