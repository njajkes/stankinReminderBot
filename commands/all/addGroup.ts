import { createGroup } from "../../controllers/groups";
import { groupModel } from "../../models/groups";
import { userModel } from "../../models/users";
import { ARG_LEN_ERR_MESSAGE, SYNTAX_ERR_MESSAGE } from "../../utils/constants";
import { comDesc } from '../comDesc'

export async function addGroup(ctx): Promise<void> {
  const query: string[] = 
    ctx.update.message.text
    .split(' ').slice(1)
  if (query.length != 2) {
    ctx.telegram.sendMessage(ctx.message.chat.id, ARG_LEN_ERR_MESSAGE + "add_group")
    return
  }
  const tracked:number = +query[1]
  if (isNaN(tracked)) {
    ctx.telegram.sendMessage(ctx.message.chat.id, SYNTAX_ERR_MESSAGE + "add_group")
    return
  }
  const groupName = query[0]
  const gnameCheck = await groupModel.findOne({groupName: groupName})
  if (gnameCheck) {
    ctx.telegram.sendMessage(ctx.message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–∞—è –≥—Ä—É–ø–ø–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ü§ï\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ!")
    return
  }
  await createGroup(groupName, !!tracked, ctx.from)
  await userModel.create({
    uid: ctx.from.id,
    username: ctx.from.username,
    groupName: groupName,
    role: "admin"
  })
  ctx.telegram.sendMessage(ctx.message.chat.id, "–ì—Ä—É–ø–ø–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n")
}

export const addGroupDescription = new comDesc("/add_group [group_name] [tracked]", "–¥–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É", 0, "group_name - –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã (1 —Å–ª–æ–≤–æ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)", "tracked - –±—É–¥–µ—Ç –ª–∏ –≥—Ä—É–ø–ø–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ –≥—Ä—É–ø–ø (0 –∏–ª–∏ 1)", "–ü—Ä–∏–º–µ—Ä: /add_group –∫–ª–∞–Ω_–∫—Ä—É—Ç—ã–µ_–≥—Ä–µ–º–ª–∏–Ω—ã 0")