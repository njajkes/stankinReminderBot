import { groupModel } from "../models/groups";
import { userModel } from "../models/users";
import { comDesc } from "./commandDescription";

export const showCandidatesDescription = new comDesc("/show_candidates [group_name]", "–≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–∂–∏–¥–∞—é—â–∏—Ö –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É", 2, "group_name - –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º")

export async function showCandidates (ctx): Promise<void> {
  const query = ctx.message.text.split(' ').slice(1)
  if (query.length != 1) {
    ctx.telegram.sendMessage(ctx.message.chat.id, "–í–≤–µ–¥–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ ü§ï\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: /help show_candidates")
    return
  }
  const group = await groupModel.findOne({groupName: query[0], adminID: ctx.from.id})
  if (!group) {
    ctx.telegram.sendMessage(ctx.message.chat.id, "–¢–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º –≤ –Ω–µ–π ü§ï")
    return
  }
  const users = await userModel.find({groupName: group.groupName, role: ["pending", "sended"]})
  if (users.length < 1) {
    ctx.telegram.sendMessage(ctx.message.chat.id, `–û–∂–∏–¥–∞—é—â–∏—Ö –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É ${group.groupName} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ :p`)
    return
  }
  let result = '–°–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É ' + group.groupName + ": ", i = 1
  users.forEach(async el => {
    el.role = "pending"
    await el.save()
    result += "\n" + i.toString() + ". @" + el.username
    i++
  })
  ctx.telegram.sendMessage(ctx.message.chat.id, result)
}