import { ARG_LEN_ERR_MESSAGE, SYNTAX_ERR_MESSAGE } from "../../utils/constants";
import { taskModel } from "../../models/tasks";
import { comDesc } from '../comDesc'
import { command } from "../command";

async function decline(ctx) {
  const query = ctx.message.text.split(" ").slice(1) // task_id
  if (query.length != 1) {
    ctx.telegram.sendMessage(ctx.message.chat.id, ARG_LEN_ERR_MESSAGE + "decline")
    return
  }
  const [taskId] = query
  if (isNaN(+taskId)) {
    ctx.telegram.sendMessage(ctx.message.chat.id, SYNTAX_ERR_MESSAGE + "decline")
    return
  }
  const task = await taskModel.findOne({uid: ctx.from.id, _id: +taskId, status: "w8ing4accept"})
  if (!task) {
    ctx.telegram.sendMessage(ctx.message.chat.id, "–ó–∞–¥–∞—á–∞ —Å —Ç–∞–∫–∏–º id, –∂–¥—É—â–∞—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã –µ—ë –æ—Ç–∫–ª–æ–Ω–∏–ª–∏, –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ü§ï")
    return
  }
  task.status = "decline"
  await task.save()
  ctx.telegram.sendMessage(ctx.message.chat.id, `–ó–∞–¥–∞—á–∞ ${task._id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!`)
}

const declineDescription = new comDesc("/decline [task_id]", "–æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä—É—é –≤–∞–º –æ—Ç–ø—Ä–∞–≤–∏–ª–∏", 0, "task_id - –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏", "–ü—Ä–∏–º–µ—Ä: /decline 993")

export const Decline = new command(decline, "decline", declineDescription)