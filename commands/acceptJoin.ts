import { groupModel } from "../models/groups";
import { userModel } from "../models/users";
import { comDesc } from "./commandDescription";

export async function acceptJoin(ctx): Promise<void> {
  const query:string[] = ctx.message.text.split(' ').slice(1)
  if (query.length != 2) {
    ctx.telegram.sendMessage(ctx.message.chat.id, "–í–≤–µ–¥–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ ü§ï\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: /help accept_join")
    return
  }
  const group = await groupModel.findOne({groupName: query[0], adminID: ctx.from.id})
  if (!group) {
    ctx.telegram.sendMessage(ctx.message.chat.id, "–¢–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º –≤ –Ω–µ–π ü§ï")
    return
  }
  const user = await userModel.findOne({username: query[1], groupName: query[0]})
  if (!user) {
    ctx.telegram.sendMessage(ctx.message.chat.id, "–¢–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –æ–∂–∏–¥–∞—é—â–∏—Ö ü§ï")
    return
  }
  if (user.role == "sended" || user.role == "pending") {
    user.role = "member"
  } else {
    ctx.telegram.sendMessage(ctx.message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã ü§ï")
    return
  }
  await user.save()
  ctx.telegram.sendMessage(ctx.message.chat.id, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${user.username} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É!`)
}

export const acceptJoinDescription = new comDesc("/accept_join [group_name] [username]", "–ø—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É", 2, "group_name - –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º", "username - —é–∑–µ—Ä–Ω–µ–π–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ (–±–µ–∑ —Å–∏–º–≤–æ–ª–∞ \"@\"", "–ü—Ä–∏–º–µ—Ä: /accept_join –∫–ª–∞–Ω_–∫—Ä—É—Ç—ã–µ_–≥—Ä–µ–º–ª–∏–Ω—ã kirito993")